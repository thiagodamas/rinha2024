// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ListaExtrato lista extrato
//
// swagger:model ListaExtrato
type ListaExtrato struct {

	// descricao
	// Required: true
	Descricao *string `json:"descricao"`

	// realizada em
	// Required: true
	// Format: date-time
	RealizadaEm *strfmt.DateTime `json:"realizada_em"`

	// tipo
	// Required: true
	// Enum: [c d]
	Tipo *string `json:"tipo"`

	// valor
	// Required: true
	Valor *int64 `json:"valor"`
}

// Validate validates this lista extrato
func (m *ListaExtrato) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDescricao(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRealizadaEm(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTipo(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValor(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ListaExtrato) validateDescricao(formats strfmt.Registry) error {

	if err := validate.Required("descricao", "body", m.Descricao); err != nil {
		return err
	}

	return nil
}

func (m *ListaExtrato) validateRealizadaEm(formats strfmt.Registry) error {

	if err := validate.Required("realizada_em", "body", m.RealizadaEm); err != nil {
		return err
	}

	if err := validate.FormatOf("realizada_em", "body", "date-time", m.RealizadaEm.String(), formats); err != nil {
		return err
	}

	return nil
}

var listaExtratoTypeTipoPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["c","d"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		listaExtratoTypeTipoPropEnum = append(listaExtratoTypeTipoPropEnum, v)
	}
}

const (

	// ListaExtratoTipoC captures enum value "c"
	ListaExtratoTipoC string = "c"

	// ListaExtratoTipoD captures enum value "d"
	ListaExtratoTipoD string = "d"
)

// prop value enum
func (m *ListaExtrato) validateTipoEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, listaExtratoTypeTipoPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ListaExtrato) validateTipo(formats strfmt.Registry) error {

	if err := validate.Required("tipo", "body", m.Tipo); err != nil {
		return err
	}

	// value enum
	if err := m.validateTipoEnum("tipo", "body", *m.Tipo); err != nil {
		return err
	}

	return nil
}

func (m *ListaExtrato) validateValor(formats strfmt.Registry) error {

	if err := validate.Required("valor", "body", m.Valor); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this lista extrato based on context it is used
func (m *ListaExtrato) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ListaExtrato) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ListaExtrato) UnmarshalBinary(b []byte) error {
	var res ListaExtrato
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
